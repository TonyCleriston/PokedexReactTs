"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var collection_1 = __importDefault(require("@discordjs/collection"));
var url_search_params_1 = __importDefault(require("@ungap/url-search-params"));
var cross_fetch_1 = __importDefault(require("cross-fetch"));
var enumerable_1 = __importDefault(require("../decorators/enumerable"));
var BASE_URI = "https://pokeapi.co/api/v2";
var Endpoint = /** @class */ (function () {
    function Endpoint(resource) {
        this.resource = resource;
        this.cache = new collection_1.default();
    }
    /**
     * Retrieve a resource from the cache
     * @param {EndpointParam} param - The ID of the resource to retrieve from cache
     * @returns {?T}
     */
    Endpoint.prototype.get = function (param) {
        return this.cache.get(param);
    };
    /**
     * Retrieve a resource from cache if it exists, or attempt to fetch it from the API
     * @param {EndpointParam} param - The ID of the resource to resolve
     * @returns {Promise<T>}
     */
    Endpoint.prototype.resolve = function (param) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, this.get(param) || this.fetch(param)];
            });
        });
    };
    /**
     * Fetch a resource from the API
     * @param {EndpointParam} param - The ID of the item to fetch
     * @param {boolean} [cache=true] - Whether or not to cache this resource
     * @returns {Promise<T>}
     */
    Endpoint.prototype.fetch = function (param, cache) {
        if (cache === void 0) { cache = true; }
        return __awaiter(this, void 0, void 0, function () {
            var data;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, cross_fetch_1.default(BASE_URI + "/" + this.resource + "/" + param).then(function (res) { return res.json(); })];
                    case 1:
                        data = _a.sent();
                        this._cache(data);
                        return [2 /*return*/, data];
                }
            });
        });
    };
    /**
     * Fetches the paginated resource list from the API, or uses the internal cache if listAll() has been called.
     * @param {number} [limit=20] - How many resources to list
     * @param {offset} [offset=0]
     * @returns {Promise<NamedApiResourceList<T>>}
     */
    Endpoint.prototype.list = function (limit, offset) {
        if (limit === void 0) { limit = 20; }
        if (offset === void 0) { offset = 0; }
        return __awaiter(this, void 0, void 0, function () {
            var results, _a, count, next, previous, params;
            return __generator(this, function (_b) {
                if (this._list) {
                    results = this._list.results.slice(offset, limit);
                    _a = this._list, count = _a.count, next = _a.next, previous = _a.previous;
                    return [2 /*return*/, { count: count, next: next, previous: previous, results: results }];
                }
                params = new url_search_params_1.default({ limit: "" + limit, offset: "" + offset });
                return [2 /*return*/, cross_fetch_1.default(BASE_URI + "/" + this.resource + "?" + params).then(function (res) { return res.json(); })];
            });
        });
    };
    /**
     * Fetches the complete resource list from the API by making two calls.
     * Caches the list by default for API-less pagination
     * @param {boolean} [cache=true] - If the result should be cahced in-memory
     * @returns {Promise<NamedApiResourceList<T>>}
     */
    Endpoint.prototype.listAll = function (cache) {
        if (cache === void 0) { cache = true; }
        return __awaiter(this, void 0, void 0, function () {
            var count, data;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (this._list) {
                            return [2 /*return*/, this._list];
                        }
                        return [4 /*yield*/, cross_fetch_1.default(BASE_URI + "/" + this.resource + "?limit=1").then(function (res) { return res.json(); })];
                    case 1:
                        count = (_a.sent()).count;
                        return [4 /*yield*/, cross_fetch_1.default(BASE_URI + "/" + this.resource + "?limit=" + count).then(function (res) { return res.json(); })];
                    case 2:
                        data = _a.sent();
                        if (cache) {
                            this._list = data;
                        }
                        return [2 /*return*/, data];
                }
            });
        });
    };
    Endpoint.prototype._cache = function (data) {
        this.cache.set(data.id, data);
    };
    __decorate([
        enumerable_1.default
    ], Endpoint.prototype, "resource", void 0);
    __decorate([
        enumerable_1.default
    ], Endpoint.prototype, "_list", void 0);
    return Endpoint;
}());
exports.Endpoint = Endpoint;
//# sourceMappingURL=Endpoint.js.map